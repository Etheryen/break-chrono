basePath: /
definitions:
  httputil.HTTPError:
    properties:
      code:
        type: integer
      message:
        type: string
    type: object
  models.Break:
    properties:
      date:
        type: string
    type: object
  models.PostResponse:
    properties:
      id:
        type: integer
    type: object
host: localhost:8000
info:
  contact: {}
  description: Set up a timer that you can share with others
  title: BreakChrono
  version: "1.0"
paths:
  /breaks:
    post:
      consumes:
      - application/json
      description: create a new timer by passing the end date
      parameters:
      - description: New break to add
        in: body
        name: date
        required: true
        schema:
          $ref: '#/definitions/models.Break'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.PostResponse'
      summary: Create a new timer
  /breaks/{id}:
    get:
      description: get end date by id
      parameters:
      - description: Timer ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Break'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/httputil.HTTPError'
      summary: Get the end date
swagger: "2.0"
